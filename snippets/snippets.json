{
	"react hook": {
		"prefix": "react hook",
		"body": [
			"import React, { useState, useEffect } from 'react';",
			"import PropTypes from 'prop-types';",
			"$0",
			"export default function ${1:myReactHook} () {",
			"\tconst initalValue = {}",
			"\tconst [${2:data},set${2:data}] = useState(initalValue);",
			"\tuseEffect(() => {",
			"\t\t$0",
			"\t})",
			"\t$0",
			"\treturn(",
			"\t\t<div></div>",
			"\t);",
			"};",
			"$0",
			"${1:myReactHook}.propTypes = {",
			"\t$0",
			"}"
		],
		"description": "react hook template"
	},
	"react class": {
		"prefix": "react class",
		"body": [
			"import React, { Component } from 'react';",
			"import PropTypes from 'prop-types';",
			"\t$0",
			"class ${1:MyComponent} extends Component {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"\t\tthis.state = {};",
			"\t}",
			"\tcomponentDidMount() {};",
			"\t$0",
			"\trender() {",
			"\t\treturn(",
			"\t\t\t<div></div>",
			"\t\t)",
			"\t}",
			"}",
			"$0",
			"export default ${1:MyComponent};",
			"\t$0",
			"${1:myReactHook}.propTypes = {",
			"\t$0",
			"}"
		],
		"description": "class component template"
	},
	"react func": {
		"prefix": "react func",
		"body": [
			"import React from 'react';",
			"import PropTypes from 'prop-types';",
			"\t$0",
			"function ${1:MyComponent} (props) {",
			"\treturn(",
			"\t\t<div></div>",
			"\t)",
			"}",
			"$0",
			"export default ${1:MyComponent};",
			"\t$0",
			"${1:myReactHook}.propTypes = {",
			"\t$0",
			"}"
		],
		"description": "function component template"
	},
	"clg": {
		"prefix": "clg",
		"body":[
			"console.log(${1:log})"
		],
		"description": "console.log"
	},
	"clw": {
		"prefix": "clw",
		"body":[
			"console.warn(${1:warn})"
		],
		"description": "console.warn"
	},
	"cle": {
		"prefix": "cle",
		"body":[
			"console.error(${1:error})"
		],
		"description": "console.error"
	}
}